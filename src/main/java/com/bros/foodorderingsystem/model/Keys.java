/*
 * This file is generated by jOOQ.
 */
package com.bros.foodorderingsystem.model;


import com.bros.foodorderingsystem.model.tables.Item;
import com.bros.foodorderingsystem.model.tables.Order;
import com.bros.foodorderingsystem.model.tables.OrderItems;
import com.bros.foodorderingsystem.model.tables.OrderRating;
import com.bros.foodorderingsystem.model.tables.Student;
import com.bros.foodorderingsystem.model.tables.Vendor;
import com.bros.foodorderingsystem.model.tables.records.ItemRecord;
import com.bros.foodorderingsystem.model.tables.records.OrderItemsRecord;
import com.bros.foodorderingsystem.model.tables.records.OrderRatingRecord;
import com.bros.foodorderingsystem.model.tables.records.OrderRecord;
import com.bros.foodorderingsystem.model.tables.records.StudentRecord;
import com.bros.foodorderingsystem.model.tables.records.VendorRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in 
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ItemRecord> ITEM_PKEY = Internal.createUniqueKey(Item.ITEM, DSL.name("item_pkey"), new TableField[] { Item.ITEM.ID }, true);
    public static final UniqueKey<OrderRecord> ORDER_PKEY = Internal.createUniqueKey(Order.ORDER, DSL.name("order_pkey"), new TableField[] { Order.ORDER.ID }, true);
    public static final UniqueKey<OrderItemsRecord> ORDER_ITEMS_PKEY = Internal.createUniqueKey(OrderItems.ORDER_ITEMS, DSL.name("order_items_pkey"), new TableField[] { OrderItems.ORDER_ITEMS.ID }, true);
    public static final UniqueKey<OrderRatingRecord> ORDER_RATING_PKEY = Internal.createUniqueKey(OrderRating.ORDER_RATING, DSL.name("order_rating_pkey"), new TableField[] { OrderRating.ORDER_RATING.ID }, true);
    public static final UniqueKey<StudentRecord> STUDENT_PKEY = Internal.createUniqueKey(Student.STUDENT, DSL.name("student_pkey"), new TableField[] { Student.STUDENT.ID }, true);
    public static final UniqueKey<VendorRecord> VENDOR_PKEY = Internal.createUniqueKey(Vendor.VENDOR, DSL.name("vendor_pkey"), new TableField[] { Vendor.VENDOR.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ItemRecord, VendorRecord> ITEM__ITEM_VENDOR_ID_FKEY = Internal.createForeignKey(Item.ITEM, DSL.name("item_vendor_id_fkey"), new TableField[] { Item.ITEM.VENDOR_ID }, Keys.VENDOR_PKEY, new TableField[] { Vendor.VENDOR.ID }, true);
    public static final ForeignKey<OrderRecord, StudentRecord> ORDER__ORDER_STUDENT_ID_FKEY = Internal.createForeignKey(Order.ORDER, DSL.name("order_student_id_fkey"), new TableField[] { Order.ORDER.STUDENT_ID }, Keys.STUDENT_PKEY, new TableField[] { Student.STUDENT.ID }, true);
    public static final ForeignKey<OrderRecord, VendorRecord> ORDER__ORDER_VENDOR_ID_FKEY = Internal.createForeignKey(Order.ORDER, DSL.name("order_vendor_id_fkey"), new TableField[] { Order.ORDER.VENDOR_ID }, Keys.VENDOR_PKEY, new TableField[] { Vendor.VENDOR.ID }, true);
    public static final ForeignKey<OrderItemsRecord, ItemRecord> ORDER_ITEMS__ORDER_ITEMS_ITEM_ID_FKEY = Internal.createForeignKey(OrderItems.ORDER_ITEMS, DSL.name("order_items_item_id_fkey"), new TableField[] { OrderItems.ORDER_ITEMS.ITEM_ID }, Keys.ITEM_PKEY, new TableField[] { Item.ITEM.ID }, true);
    public static final ForeignKey<OrderItemsRecord, OrderRecord> ORDER_ITEMS__ORDER_ITEMS_ORDER_ID_FKEY = Internal.createForeignKey(OrderItems.ORDER_ITEMS, DSL.name("order_items_order_id_fkey"), new TableField[] { OrderItems.ORDER_ITEMS.ORDER_ID }, Keys.ORDER_PKEY, new TableField[] { Order.ORDER.ID }, true);
    public static final ForeignKey<OrderRatingRecord, OrderRecord> ORDER_RATING__ORDER_RATING_ORDER_ID_FKEY = Internal.createForeignKey(OrderRating.ORDER_RATING, DSL.name("order_rating_order_id_fkey"), new TableField[] { OrderRating.ORDER_RATING.ORDER_ID }, Keys.ORDER_PKEY, new TableField[] { Order.ORDER.ID }, true);
}
