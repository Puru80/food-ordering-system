/*
 * This file is generated by jOOQ.
 */
package com.bros.fooforderingsystem.model.tables.daos;


import com.bros.fooforderingsystem.model.tables.Student;
import com.bros.fooforderingsystem.model.tables.records.StudentRecord;

import java.time.LocalDateTime;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StudentDao extends DAOImpl<StudentRecord, com.bros.fooforderingsystem.model.tables.pojos.Student, String> {

    /**
     * Create a new StudentDao without any configuration
     */
    public StudentDao() {
        super(Student.STUDENT, com.bros.fooforderingsystem.model.tables.pojos.Student.class);
    }

    /**
     * Create a new StudentDao with an attached configuration
     */
    public StudentDao(Configuration configuration) {
        super(Student.STUDENT, com.bros.fooforderingsystem.model.tables.pojos.Student.class, configuration);
    }

    @Override
    public String getId(com.bros.fooforderingsystem.model.tables.pojos.Student object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bros.fooforderingsystem.model.tables.pojos.Student> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Student.STUDENT.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.bros.fooforderingsystem.model.tables.pojos.Student> fetchById(String... values) {
        return fetch(Student.STUDENT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.bros.fooforderingsystem.model.tables.pojos.Student fetchOneById(String value) {
        return fetchOne(Student.STUDENT.ID, value);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bros.fooforderingsystem.model.tables.pojos.Student> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Student.STUDENT.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<com.bros.fooforderingsystem.model.tables.pojos.Student> fetchByName(String... values) {
        return fetch(Student.STUDENT.NAME, values);
    }

    /**
     * Fetch records that have <code>email BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bros.fooforderingsystem.model.tables.pojos.Student> fetchRangeOfEmail(String lowerInclusive, String upperInclusive) {
        return fetchRange(Student.STUDENT.EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<com.bros.fooforderingsystem.model.tables.pojos.Student> fetchByEmail(String... values) {
        return fetch(Student.STUDENT.EMAIL, values);
    }

    /**
     * Fetch records that have <code>phone BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bros.fooforderingsystem.model.tables.pojos.Student> fetchRangeOfPhone(String lowerInclusive, String upperInclusive) {
        return fetchRange(Student.STUDENT.PHONE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>phone IN (values)</code>
     */
    public List<com.bros.fooforderingsystem.model.tables.pojos.Student> fetchByPhone(String... values) {
        return fetch(Student.STUDENT.PHONE, values);
    }

    /**
     * Fetch records that have <code>created_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bros.fooforderingsystem.model.tables.pojos.Student> fetchRangeOfCreatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Student.STUDENT.CREATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_at IN (values)</code>
     */
    public List<com.bros.fooforderingsystem.model.tables.pojos.Student> fetchByCreatedAt(LocalDateTime... values) {
        return fetch(Student.STUDENT.CREATED_AT, values);
    }

    /**
     * Fetch records that have <code>updated_at BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.bros.fooforderingsystem.model.tables.pojos.Student> fetchRangeOfUpdatedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Student.STUDENT.UPDATED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>updated_at IN (values)</code>
     */
    public List<com.bros.fooforderingsystem.model.tables.pojos.Student> fetchByUpdatedAt(LocalDateTime... values) {
        return fetch(Student.STUDENT.UPDATED_AT, values);
    }
}
